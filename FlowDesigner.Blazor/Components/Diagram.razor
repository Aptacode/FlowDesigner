@inherits DiagramBase


<h1>Designer</h1>
<div @ref="diagram"
     tabindex="0"
     @onkeydown="KeyDown"
     @onkeyup="KeyUp"
     style="cursor:@(Designer.Cursor)">
    <svg width="@(Designer.Rectangle.Size.X * Constants.Scale)" height="@(Designer.Rectangle.Size.Y* Constants.Scale)"
         @onmousemove="MouseMove"
         @onmousedown="MouseDown"
         @onmouseup="MouseUp"
         @onmouseout="MouseOut">
        <defs>
            <pattern id="tenthGrid" width="@Constants.Scale" height="@Constants.Scale" patternUnits="userSpaceOnUse">
                <path d="M @Constants.Scale 0 L 0 0 0 @Constants.Scale" fill="none" stroke="silver" stroke-width="1" />
            </pattern>
            <pattern id="grid" width="@(Constants.Scale * 4)" height="@(Constants.Scale * 4)" patternUnits="userSpaceOnUse">
                <rect width="@(Constants.Scale * 4)" height="@(Constants.Scale * 4)" fill="url(#tenthGrid)" />
                <path d="M @(Constants.Scale * 4) 0 L 0 0 0 @(Constants.Scale * 4)" fill="none" stroke="gray" stroke-width="1" />
            </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#grid)" />

        @for (int i = Designer.Components.Count() - 1; i >= 0; i--)
        {
            switch (Designer.Components.ElementAt(i))
            {
                case PointViewModel pointViewModel:
                    <Point Point="pointViewModel" @key="pointViewModel.Id" />
                    break;
                case ConnectedComponentViewModel connectedComponentViewModel:
                    <Item Item="connectedComponentViewModel" @key="connectedComponentViewModel.Id" />
                    break;
                case PathViewModel pathViewModel:
                    <Path Path="pathViewModel" @key="pathViewModel.Id" />
                    break;
            }
        }


        <Selection Selection="@(Designer.Selection)" />
        <Selection Selection="@(Designer.CreateSelection)" />
        <Path Path="@(Designer.NewConnectionPath)" />
        <Point Point="@(Designer.MousePoint)" />

    </svg>

</div>


